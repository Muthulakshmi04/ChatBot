{% load static %}

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
  <meta name="generator" content="Hugo 0.101.0">
  <title>Cover Template Â· Bootstrap v4.6</title>

  <link rel="canonical" href="https://getbootstrap.com/docs/4.6/examples/cover/">

  

  <!-- Bootstrap core CSS -->
<link href="/docs/4.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">



  <!-- Favicons -->
<link rel="apple-touch-icon" href="/docs/4.6/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
<link rel="icon" href="/docs/4.6/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
<link rel="icon" href="/docs/4.6/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
<link rel="manifest" href="/docs/4.6/assets/img/favicons/manifest.json">
<link rel="mask-icon" href="/docs/4.6/assets/img/favicons/safari-pinned-tab.svg" color="#563d7c">
<link rel="icon" href="/docs/4.6/assets/img/favicons/favicon.ico">
<meta name="msapplication-config" content="/docs/4.6/assets/img/favicons/browserconfig.xml">
<meta name="theme-color" content="#563d7c">
  <title>AI ChatBot</title>

<!-- Link to Static CSS -->
  <link rel="stylesheet" type="text/css" href="{% static 'chatbot_project/stylesheets/staticStyle.css' %}">

  <!-- Dynamic CSS -->
  <style>
    :root {
      --fadeIn_fadeOut_transition_speed: 300ms;
    }

    /*Bot typing animation*/
    .circle:nth-child(1),
    .circle:nth-child(2),
    .circle:nth-child(3) {
      width: 10px;
      height: 10px;
      background-color: #fff;
      display: inline-flex;
      border-radius: 2em;
      animation: botTyping .9s ease-in infinite;
    }

    .circle:nth-child(2) {
      animation-delay: .15s;
    }

    .circle:nth-child(3) {
      animation-delay: .25s;
    }

    @keyframes botTyping {
      0% {
        transform: translateY(0px);
      }

      50% {
        transform: translateY(-10px);
      }

      100% {
        transform: translateY(0px);
      }
    }

    /*Chat style animation*/
    .floatup-msg{
      animation: floatup .5s forwards;
    }

    @keyframes floatup {
      from {
        transform: translateY(27px);
      }

      to {
        transform: translateY(0px);
        opacity: 1;
      }
    }

    body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-image: url('https://www.shutterstock.com/image-photo/ai-machine-learning-hands-robot-600nw-2261069627.jpg'); /* Replace 'background.jpg' with your image file */
            background-size: cover;
            background-position: center;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            text-align: center;
            background-color: rgba(255, 255, 255, 0.7); /* Adjust the transparency as needed */
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        p {
            color: #555;
            margin-bottom: 20px;
        }

        .btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #0056b3;
        }

    /*ChatBot window fade in and fade out animation*/
    .fade-out-transition{
      transition: background-color 0.3s ease;
    }

    .fade-in-transition {
      transition: var(--fadeIn_fadeOut_transition_speed);
      transition-property: opacity, background-color, transform;
      z-index: var(--chatBot_ZIndex);
    }
    .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }
  </style>


</head>

<body>

  <h1>Welcome</h1><br>
  


  <div id="botWindow" class="container fade-in-transition hidden">
    <div class="header">
      <div class="header">
        <h1>Happi</h1>
        <img src='{% static "chatbot_project/images/bot.png" %}'>
      </div>
      <button class="hideBot fade-out-transition" type="button" onclick="hideBotFun()">X</button>
    </div>
    <div class="body">
      <p class="bot_message">Hi! How can I help you ? </p>
    </div>
    <!-- Bot Typing animation -->
    <div class="botTyping-bg">
      <div class="botTyping hidden">
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>
        <span>Happi is typing</span>
      </div>
    </div>
    {%csrf_token%}
    <form id="myForm" value="query">
      <div class="footer">
        <input id="query" type="text" onkeyup="checkText()" placeholder="Type..." name="query">
        <button class="submit_btn" type="submit"> Send</button>
      </div>
    </form>
  </div>
  <!-- Here is the Aapi dialog message box to catch user's attention -->
  <div class="popup-dialog fade-in-transition hidden">
    <div class="aapi-popup-dialog">
      <span>Hi there, I'm Happi. <br>How may I help you today?</span>
    </div>
    <div class="attention"></div>
    <div class="down-triangle"></div>
  </div>
  <button id="showBotbtn" class="showBot fade-in-transition" type="button" onclick="showBotFun()">Chat</button>


  <!-- ajax string -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>



  <!-- JavaScript -->
  <script type="text/javascript">
    "use strict";
    const fadeIn_fadeOut_transition_speed = 300;
    const messages = [];
    let popupDialog = document.querySelector(".popup-dialog")

    // onload function will run when page is rendered
    window.onload = function () {
      // ChatBot dialog popup function
      setTimeout(() => {
        // ChatBot dialog will only popup if user haven't used the chatBot.
        if (messages.length === 0) {
          popupDialog.classList.remove("hidden");
          popupDialog.style.opacity = 0;
          setTimeout(()=>{
            popupDialog.style.opacity = 1;
          }, fadeIn_fadeOut_transition_speed)
        }
      }, 5000);
    }

    // updates the chats
    function updateChatText() {
      let html = "";
      let botHtmlTag = '<div class = "bot-message-block floatup-msg"><img class = "bot-profile" src="{% static "chatbot_project/images/bot.png" %}"><p class= bot_message>';
      let userHtmlTag = '<div class = "user-message-block floatup-msg"><img class = "user-profile" src="{% static "chatbot_project/images/user.png" %}"><p class= user_message>';
      messages.slice().reverse().forEach(function (item, index) {
        if (item.name === "Bot") {
          if (item.message.includes("https://") == true){
            html += `<div class = "bot-message-block floatup-msg"><img class = "bot-profile" src="{% static "chatbot_project/images/bot.png" %}"><a class= bot_message href="${item.message}">${item.message}</a></div>`
          }
          else{
            html += botHtmlTag + item.message + '</p></div>'
          }
        } else {
          html += userHtmlTag + item.message + '</p></div>'
        }
      });
      const chatMessage = document.querySelector(".body");
      chatMessage.innerHTML = html;
    }

    // To give chat like feel
    function scrollToBottom() {
      messages.scrollTop = messages.scrollHeight;
    }

    function showBotFun() {
      // Initialize Variables
      const chatBotWindow = document.getElementById("botWindow");

      //Main Logic to show chatBot
      chatBotWindow.style.opacity = 0;
      chatBotWindow.style.transform = `translateY(10%)`;
      document.querySelector(".container").classList.remove("hidden");

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        chatBotWindow.style.transform = `translateY(0%)`;
        chatBotWindow.style.opacity = 1;
      }, fadeIn_fadeOut_transition_speed);

      //Main Logic to hide Chat button
      const showBot = document.getElementById("showBotbtn");
      showBot.style.opacity = 0;
      popupDialog.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        document.querySelector(".showBot").classList.add("hidden");
        popupDialog.classList.add("hidden");
      }, fadeIn_fadeOut_transition_speed);

      if (messages.length === 0) {
        let msg2 = { name: "Bot", message: "Hello! How can I help you? <br> Type 'help' to get help" };
        messages.push(msg2);
        updateChatText();
        scrollToBottom();
      }
    }

    function hideBotFun() {
      // Initialize Variables
      const showBot = document.getElementById("showBotbtn");

      //Main Logic to show Chat button
      showBot.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      document.querySelector(".showBot").classList.remove("hidden");
      setTimeout(() => {
        showBot.style.opacity = 1;
      }, fadeIn_fadeOut_transition_speed);

      //Main Logic to hide chat bot
      const chatBotWindow = document.getElementById("botWindow");
      chatBotWindow.style.transform = `translateY(11%)`;
      chatBotWindow.style.opacity = 0;

      //Pausing the flow of the code for 0.3 secs
      setTimeout(() => {
        document.querySelector(".container").classList.add("hidden");
      }, fadeIn_fadeOut_transition_speed);


    }

    function getCookie(name) {
      let cookieValue = null;
      if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
          const cookie = cookies[i].trim();
          // Does this cookie string begin with the name we want?
          if (cookie.substring(0, name.length + 1) === (name + '=')) {
            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
            break;
          }
        }
      }
      return cookieValue;
    }
    const csrftoken = getCookie('csrftoken');

    // Disable the send button if there is no text in query field

    const regex = /[A-Za-z0-9]/
    let submit_btn = document.querySelector(".submit_btn");
    function checkText() {
      const inp_string = document.querySelector("#query").value
      if (regex.test(inp_string) === false) {
        submit_btn.disabled = true
      } else {
        submit_btn.disabled = false
      }
    }

    // Here is the main code which Posts and gets responses
    const form1 = document.getElementById("myForm");
    const botTyping = document.querySelector(".botTyping")
    const txtUserInp = document.querySelector("#query");
    form1.addEventListener("submit", function (e) {
      e.preventDefault();
      if (txtUserInp.value == "") {
        return
      }
      let msg1 = { name: "user1", message: txtUserInp.value }
      messages.push(msg1);
      updateChatText();
      submit_btn.disabled = true;
      botTyping.classList.remove("hidden");
      
      // converting use input to lowerCase
      let lowerCaseInput = $('#query').val().toLowerCase();
      
      // Create the data object with the lowercase input
      let requestData = { query: lowerCaseInput };

      $.ajax({
        method: "GET",
        url: "{%url 'chatbot_project:chatBot'%}",
        headers: {
          "Content-type": "application/json",
          "X-Requested-With": "XMLHttpRequest",
          "X-CSRFToken": csrftoken,
        },
        data: requestData
      })
        // This steps should be done if the input is successfully submitted to the bot and get response
        .done(function (response) {
          const botRes = JSON.stringify(response);
          const obj = JSON.parse(botRes);
          let msg2 = { name: "Bot", message: obj.Bot };
          messages.push(msg2);
          updateChatText();
          scrollToBottom();
          submit_btn.disabled = false;
          botTyping.classList.add("hidden");
          txtUserInp.value = "";
        })
        // if any errors they will be thrown into the console
        .fail(function (response) {
          let msg2 = { name: "Bot", messages: "Internal server error, Please reload the page." }
          messages.push(msg2);
          updateChatText();
          scrollToBottom();
          submit_btn.disabled = false;
          botTyping.classList.add("hidden");
          txtUserInp.value = "";
        })
    })

  </script>
</body>

</html>
